<script>
    (function($) {
        $.fn.autoCompleteFix = function(opt) {
            var ro = 'readonly', settings = $.extend({
                attribute : 'autocomplete',
                trigger : {
                    disable : ["off"],
                    enable : ["on"]
                },
                focus : function() {
                    $(this).removeAttr(ro);
                },
                force : false
            }, opt);

            $(this).each(function(i, el) {
                el = $(el);

                if(el.is('form')) {
                    var force = (-1 !== $.inArray(el.attr(settings.attribute), settings.trigger.disable))
                    el.find('input').autoCompleteFix({force:force});
                } else {
                    var disabled = -1 !== $.inArray(el.attr(settings.attribute), settings.trigger.disable);
                    var enabled = -1 !== $.inArray(el.attr(settings.attribute), settings.trigger.enable);
                    if (settings.force && !enabled || disabled)
                        el.attr(ro, ro).focus(settings.focus).val("");
                }
            });
        };
        $('form').autoCompleteFix();
    })(jQuery);
</script>


<?php $form=$this->beginWidget('CActiveForm', array(
	'id'=>'author-form',
    'htmlOptions' => array(
        'enctype' => 'multipart/form-data',
        'autocomplete' => 'off'
    ),
	// Please note: When you enable ajax validation, make sure the corresponding
	// controller action is handling ajax validation correctly.
	// There is a call to performAjaxValidation() commented in generated controller code.
	// See class documentation of CActiveForm for details on this.
	'enableAjaxValidation'=>false,
)); ?>